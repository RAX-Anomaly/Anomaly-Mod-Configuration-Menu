--[[
  DESCRIPTION: Savefile specific MCM-option storage. See ui_mcm.script for tutorial.
  AUTHOR: dph-hcl

  CHANGES:
    2021-08-02 by dph-hcl - Removed license/superfluous usage info from header
]]--

local modules = {}

function register_module(mod)
    m = tostring(mod)
    if (not m) then
        return
    end
    table.insert(modules, mod) 
end

local function compare_paths(mt, pt)
    m = tostring(mt)
    p = tostring(pt)
    if (not m) or (not p) then
        return
    end
    local mm = str_explode(m, "/")
    local pp = str_explode(p, "/")
    for i, seg in ipairs(mm) do
        if (not pp[i]) or (not seg == pp[i]) then
            return false
        end
        return true
    end
end

function load_state(data)
    local t = axr_main.config:collect_section("mcm")
    for p, v in pairs(t) do
        for i, m in ipairs(modules) do
            if not data[m] then
                goto continue
            end
            if compare_paths(m, p) then
                ui_mcm.set(p, (data[m][p] or false))
            end
            ::continue::
        end
    end
end

function save_state(data)
    local t = axr_main.config:collect_section("mcm")
    for p, v in pairs(t) do
        for i, m in ipairs(modules) do
            if not data[m] then
                data[m] = {}
            end
            if compare_paths(m, p) then
                data[m][p] = ui_mcm.get(p)
            end
        end
    end
end

function on_game_start()
    RegisterScriptCallback("save_state", save_state)
    RegisterScriptCallback("load_state", load_state)
end